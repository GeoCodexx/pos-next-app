// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  id          Int       @id @default(autoincrement())
  names       String
  patlastname String
  matlastname String
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  role        Role      @relation(fields: [roleId], references: [id])
  roleId      Int
  invoices    Invoice[]
}

model Customer {
  id          Int       @id @default(autoincrement())
  names       String
  patlastname String
  matlastname String?
  email       String?
  phone       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  invoices    Invoice[]
}

model Invoice {
  id              Int              @id @default(autoincrement())
  serie           String
  numserie        String
  date            DateTime
  total           Decimal          @db.Decimal(10, 2)
  user            User             @relation(fields: [userId], references: [id])
  userId          Int
  customer        Customer         @relation(fields: [customerId], references: [id])
  customerId      Int
  invoiceProducts InvoiceProduct[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Product {
  id             Int              @id @default(autoincrement())
  code  String  @unique
  detail           String
  stock Int
  minStock Int
  image String
  location String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  category       Category         @relation(fields: [categoryId], references: [id])
  categoryId     Int
  invoiceProducts InvoiceProduct[]
}

model InvoiceProduct {
  id        Int      @id @default(autoincrement())
  qty       Int
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
  invoiceId Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
